# GridTokenX Development Docker Compose
# Version: 0.1.1 - Updated August 2025
# Simplified development setup with hot-reload capabilities

services:
  # Single development node
  dev-node:
    image: gridtokenx-blockchain:latest
    container_name: gridtokenx-dev
    ports:
      - "8080:8080"   # REST API
      - "9000:9000"   # P2P networking
      - "9090:9090"   # Metrics
    volumes:
      - dev_data:/app/data
      - ./config.toml:/app/config.toml
      - ./logs:/app/logs
    environment:
      - RUST_LOG=debug
      - GRIDTOKEN_AUTHORITY_TYPE=EGAT
      - GRIDTOKEN_NETWORK_ID=gridtokenx-devnet
      - GRIDTOKEN_DEV_MODE=true
    networks:
      - gridtoken-dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Development database browser (optional)
  db-browser:
    image: adminer
    container_name: gridtokenx-db-browser
    ports:
      - "8081:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=dev-node
    depends_on:
      - dev-node
    networks:
      - gridtoken-dev

  # Development metrics (optional)
  prometheus-dev:
    image: prom/prometheus:latest
    container_name: gridtoken-prometheus-dev
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_dev_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=24h'
      - '--web.enable-lifecycle'
    networks:
      - gridtoken-dev

networks:
  gridtoken-dev:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16

volumes:
  dev_data:
    driver: local
  prometheus_dev_data:
    driver: local
